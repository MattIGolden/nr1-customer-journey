# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

# Gotchas:
# - The master branch has to have a config or it won't see other branches config files
# - CircleCI requires a follower before it will build a project


# Testing
# There is a CLI for testing config schema locally - https://circleci.com/docs/2.0/local-cli/#section=configuration
# Run `circleci config validate` from the project folder


# 2.1 vs. 2.0 - https://discuss.circleci.com/t/circleci-2-1-config-overview/26057
# 
# Spec now includes:
#   orbs
#   commands
#   executors
#   jobs

# Version 2.1 moves towards a single version at the top of the file vs. under workflow
version: 2.1

# 
# Orbs
# 
# orbs:
# "Orb snyk/snyk@0.0.8 not loaded. To use this orb, an organization admin must opt-in to using third party orbs in Organization Security settings."
#   snyk: snyk/snyk@0.0.8


#
# Executors
#

executor_defaults: &executor_defaults
  environment:
    - GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1

# Node Images - https://circleci.com/docs/2.0/circleci-images/#nodejs
# Variants - https://circleci.com/docs/2.0/circleci-images/#language-image-variants
executors:
  node10:
    <<: *executor_defaults
    docker:
      - image: circleci/node:10

  node10browsers:
    <<: *executor_defaults
    docker:
      - image: circleci/node:10-browsers

commands: 
  # Download and cache source code
  command-restore-or-checkout:
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

  # Download and cache dependencies
  command-install:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      # "Orb snyk/snyk@0.0.8 not loaded. To use this orb, an organization admin must opt-in to using third party orbs in Organization Security settings."
      # - snyk/scan

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  # Add ssh key with write access
  # Note: only to be used on merges to master, i.e. it has been reviewed by a NewRelic maintainer
  command-setup-ci-keys:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "6a:ca:a9:d4:15:97:96:e1:1d:0f:af:e5:85:27:88:d4"

  install-nr1-cli:
    steps:
      - run:
          name: "Install NR1 CLI"
          command: |
            if ! type "nr1" > /dev/null; then
              curl -s https://cli.nr-ext.net/installer.sh | sudo bash
            fi

  install-oss-cli:
    steps:
      - run:
          name: "Install OSS CLI"
          command: |
            npm install -g @newrelic/osscli
            
  # TO DO - Replace validate-nerdpack-schema and validate-opensource-files with the oss-cli
  # This will allow us to make changes at-will vs. updating dozens of config.yml's
  validate-nerdpack-schema:
    steps:
      - run:
          name: "Validating Nerdpack"
          command: |
            nr1 nerdpack:validate

  validate-opensource-files:
    steps:
      - run:
          name: "Checking for OSS files"
          command: |
            rootDir=./

            declare -a files=(
              "README.md"
              ".prettierrc.js"
              ".eslintrc.js"
              ".gitignore"
              ".circleci/config.yml"
              "package.json"

              "LICENSE"
              "THIRD_PARTY_NOTICES.md"
              "CODE_OF_CONDUCT.md"
              "cla.md"
              ".github/bug_report.md"
              ".github/enhancement.md"
            )

            for FILE in "${files[@]}"
            do
              if [ ! -f "${rootDir}$FILE" ]; then
                echo "$FILE is missing from Nerdpack"
                exit 1
              else
                echo "Found "${rootDir}$FILE
              fi
            done

  deploy-demotron:
    steps:
      - run:
          name: "Build"
          command: |
            echo "nr1 nerdpack:build"

      - run:
          name: "Publish"
          command: |
            echo "nr1 nerdpack:publish"

      - run:
          name: "Deploy"
          command: |
            echo "nr1 nerdpack:deploy"

      - run:
          name: "Subscribe"
          command: |
            echo "nr1 nerdpack:subscribe"

jobs:
  setup:    
    executor: node10

    steps:
      - command-restore-or-checkout
      - command-install

  build:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      - install-nr1-cli
      - run:
          name: "nr1 nerdpack build"
          command: |
            nr1 nerdpack:build

  validate-nerdpack:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      - install-nr1-cli
      # TO DO - Build and publish the osscli to npm
      # - install-oss-cli
      - validate-nerdpack-schema
      - validate-opensource-files
  
  test-pr:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      # We don't have tests yet, but we should
      - run:
          name: "Additional checks on pr from fork"
          command: |
            echo 'Validating nothing is awry, maybe we look for changes to package.json or .circle/config.yml'

  test-code:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      # We don't have tests yet, but we should
      - run: npm test

  # TO DO - How do we decide between major/minor/patch?
  version-app:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      - run:
          name: Version bump
          command: |
            echo 'npm version { major | minor | patch }'

  # TO DO - utilize our future oss-cli or a script to callout to github to generate a release utilizing the version in package.json
  generate-release:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      - run:
          name: Generate release placeholder
          command: |
            echo 'Placeholder for generating a release via Github'

  # TO DO - How do we ensure checking this in doesn't run a build?
  generate-contributors:
    executor: node10browsers

    steps:
      - command-restore-or-checkout
      # TO DO - Build and publish the osscli to npm
      # - install-oss-cli
      - run:
          name: Generate Contributors
          command: |
            outputFile=contributors.json
            echo 'Generating a list of contributors'
            echo 'oss generate:contributors --output=contributors.json'
            echo 'git add contributors.json'
            echo 'git commit -m "[skip ci] Updating contributors"'
            echo 'git push'
    
  # TO DO - Profile keys (private env variables) & actual commands including adding --profile etc.
  deploy:
    executor: node10

    steps:
      - command-restore-or-checkout
      - command-install
      - install-nr1-cli
      - deploy-demotron

workflows:
  # A merge or commit to the master branch
  release:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master

      - build:
          requires:
            - setup

          filters:
            branches:
              only:
                - master

      - version-app:
          requires:
            - setup

          filters:
            branches:
              only:
                - master

      - generate-release:
          requires:
            - setup
            - version-app

          filters:
            branches:
              only:
                - master

      # TO DO - Should deploy be based on the output of generating a release or the current state of the repo?
      - deploy:
          requires:
            - setup

          filters:
            branches:
              only:
                - master
  
  # Test and Analyze a branch (other than master)
  # Our Advanced Settings of "Only build pull requests" will limit this to branches with open pull requests
  analyze:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - master
      
      # All contributions, even those by maintainers should follow the pr's from forks workflow
      # CircleCI sets the name of pull requests originating from forks to /pull/{id}
      - test-pr:
          requires:
            - setup

          filters:
            branches:
              only: /pull\/[0-9]+/

      - test-code:
          requires:
            - setup

          filters:
            branches:
              ignore:
                - master

      # Validate schema of the Nerdpack, files needed for OS
      - validate-nerdpack:
          requires:
            - setup

          filters:
            branches:
              ignore:
                - master