# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

# Notes:
# - The master branch has to have a config or it won't even see other branches
# - CircleCI requires a follower before it will build a project
# - There is a CLI for testing config schema locally - https://circleci.com/docs/2.0/local-cli/#section=configuration


# 2.1 vs. 2.0 - https://discuss.circleci.com/t/circleci-2-1-config-overview/26057
# 
# Spec now includes:
#   orbs
#   commands
#   executors
#   jobs

# Version 2.1 moves towards a single version at the top of the file vs. under workflow
version: 2.1

#
# Executors
#

executor_defaults: &executor_defaults
  # TO DO - Is there any benefit to this being the name of the actual project?
  working_directory: ~/repo

  environment:
    - GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1

# Node Images - https://circleci.com/docs/2.0/circleci-images/#nodejs
# Variants - https://circleci.com/docs/2.0/circleci-images/#language-image-variants
executors:
  node10:
    <<: *executor_defaults
    docker:
      - image: circleci/node:10

  node10browsers:
    <<: *executor_defaults
    docker:
      - image: circleci/node:10-browsers

commands: 
  # Download and cache source code
  restore_or_checkout:
    steps:
      - restore_cache:
            keys:
              - source-v1-{{ .Branch }}-{{ .Revision }}
              - source-v1-{{ .Branch }}-
              - source-v1-

      - checkout

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

  # Download and cache dependencies
  install:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  # Add ssh key with write access
  # Note: only to be used on merges to master, i.e. it has been reviewed by a NewRelic maintainer
  setup_ci_keys:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "6a:ca:a9:d4:15:97:96:e1:1d:0f:af:e5:85:27:88:d4"

  install_nr1cli:
    steps:
      - run:
          name: "Install NR1 CLI"
          command: |
            if ! type "nr1" > /dev/null; then
              curl -s https://cli.nr-ext.net/installer.sh | sudo bash
            fi
            

  validate_os_schema:
    steps:
      - run:
          name: "Checking for all the necessary OSS bits"
          command: |
            FILE=~/repo/LICENSE
            if [ -f "$FILE" ]; then
                echo "$FILE exists"
            fi

            FILE=~/repo/THIRD_PARTY_NOTICES.md
            if [ -f "$FILE" ]; then
                echo "$FILE exists"
            fi

  deploy_demotron:
    steps:
      - run:
          name: "Build"
          command: |
            echo "nr1 nerdpack:build"
      - run:
          name: "Publish"
          command: |
            echo "nr1 nerdpack:publish"
      - run:
          name: "Deploy"
          command: |
            echo "nr1 nerdpack:deploy"
      - run:
          name: "Subscribe"
          command: |
            echo "nr1 nerdpack:subscribe"

jobs:
  setup:
    executor: node10

    steps:
      - restore_or_checkout
      - install

  build:
    executor: node10browsers

    steps:
      - install_nr1cli
      - run:
          name: "nr1 nerdpack build"
          command: |
            nr1 nerdpack:build

  validate:
    # TO DO - Do I need working directory here/everywhere?
    executor: node10browsers

    steps:
      - validate_os_schema

  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10-browsers
    steps:
      # We don't have tests yet, but we should
      - run: npm test

  # TO DO - How do we decide between major/minor/patch?
  version_app:
    executor: node10browsers
    steps:
      - run:
          name: Version bump
          command: |
            echo 'npm version { major | minor | patch }'

  # TO DO - utilize our future oss-cli or a script to callout to github to generate a release utilizing the version in package.json
  generate_release:
    executor: node10browsers
    steps:
      - run:
          name: Generate release placeholder
          command: |
            echo 'Placeholder for generating a release via Github'

  # TO DO - How do we ensure checking this in doesn't run a build?
  generate_contributors:
    executor: node10browsers
    steps:
      - run:
          name: Generate Contributors
          command: |
            outputFile=contributors.json
            echo 'Generating a list of contributors'
            echo 'git add contributors.json'
            echo 'git commit -m "Updating contributors"'
            echo 'git push'
    
  # TO DO - Profile keys (private env variables) & actual commands including adding --profile etc.
  deploy:
    executor: node10

    steps:
      - restore_or_checkout
      - install
      - install_nr1cli
      - deploy_demotron

workflows:
  # A merge or commit to the master branch
  release:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master
      - build:
          filters:
            branches:
              only:
                - master
      - generate_release:
          filters:
            branches:
              only:
                - master
      - version_app:
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
  
  # Test and Analyze a branch (other than master)
  # Our Advanced Settings of "Only build pull requests" will limit this to branches with open pull requests
  test:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - master

      - build:
          filters:
            branches:
              ignore:
                - master

      - validate:
          filters:
            branches:
              ignore:
                - master
  
  # Special care and handling of pr's from forks
  # CircleCI sets the name of pull requests originating from forks to /pull/{id}
  pr_from_fork:
    jobs:
      - setup:
          filters:
            branches:
              only: /pull\/[0-9]+/

      - test:
          filters:
            branches:
              only: /pull\/[0-9]+/

      - validate:
          filters:
            branches:
              only: /pull\/[0-9]+/